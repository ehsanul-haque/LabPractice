{
  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:

  "cpp snippets": {
    "prefix": "boilerplate",
    "body": [
      "#include <iostream>",
      "using namespace std;\n",
      "int main()",
      "{",
	    "\t$0",
      "    return 0;",
      "}"
    ],
    "description": "to produce the main snippet for cpp"
  },

  "cp-extension": {
    "prefix": ["cpp-cp"],
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "#define ll long long",
      "#define mod 1000000007\nvoid solve()",
      "{",
      "\t$2",
      "}",
      "int main() {\n\tios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n#ifndef ONLINE_JUDGE",
      "\tfreopen(\"input.txt\", \"r\", stdin);",
      "\tfreopen(\"output.txt\", \"w\", stdout);",
      "#endif\n\n\tll test=1;\n//$1cin>>test;\n\twhile(test--)\n\t{\n\t\tsolve();\n\t}\n\treturn 0;\n}\n"
    ],
    "description": "Default cpp code for CP"
  },

  "cpp-extension": {
    "prefix": ["cpp-cp2"],
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "#define endl \"\\n\"",
      "int main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL),cout.tie(NULL);\n\t$0",

      "return 0;\n}\n"
    ],
    "description": "Default cpp code for CP"
  },

  "cppp-extension": {
    "prefix": ["cpp-cp3"],
    "body": [
      "#include <bits/stdc++.h>",
      "using namespace std;\n",

      "int main() {\n\tios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n#ifndef ONLINE_JUDGE",
      "\tfreopen(\"input.txt\", \"r\", stdin);",
      "\tfreopen(\"output.txt\", \"w\", stdout);",
      "#endif\n\n\t$1\n\n\treturn 0;\n}\n"
    ],
    "description": "Default cpp code for CP"
  }
}
